Interesting:
- Documentation of Windows idiosyncrasies:
    :help win32
- Dictionary API: http://dictionaryapi.net/
- Use plug-in internal mappings with <Plug> to get <expr> to work for menus:
    exe 'vmenu '.entry.' <C-C><Plug>GitsupportMenu1'
    nmap <expr> <Plug>GitsupportMenu1 <SID>AssembleCmdLine( ':GitLog -p -S "'.@*, '"' )

Project:
- (FM,WM, DONE?) Use normal!, noremap and noremenu consistently.
- (FM,WM) Is the difference between local and global/system installation
  documented somewhere?
- (WM, DONE?) Improve 'adjust end-of-line comment' to change the line if the comment
  itself contains ignored sections?
- (WM) Remove old ".../rc/sample_template_file".
- Do not always jump to errors automatically from the quickfix list. Make this
  configurable.
- Configure the template which is inserted automatically when a new file is
  created.
- Use 'Xterm_Executable' and 'Xterm_Options' everywhere.

vim.org:
- (FM, DONE?) Reference github on plug-in pages.

Templates:
- (WM, DONE) API 'EditTemplateFiles'.
  * Check whether an indexed file actually exists.
  * Configuration of the file browser (+ documentation).
- (WM, DONE?) After reloading a template library, it is possible that the maps
  are not created anymore.
- (WM, DONE?) Correct escape for menu names.
  * At least these special characters must be escaped: <space> . | \ &
  * Expanded menus for lists.
- (WM, DONE) When overwriting templates, also set new map and shortcut, if one
  is given.
- (DONE) Add configuration "g:Templates_OverwriteWarning".
- (WM) Better debugging while reading template files:
  Print filename and line number for errors and warnings.
- (WM) Configure CTRL+J and CTRL+D.
- (DONE) Can not use property "Templates::UsePersonalizationFile" anymore:
  Personalization files loaded before customization.
- Change 3rd argument of 'mmtemplates#core#AddCustomTemplateFiles'?
- Add an appropriate action if 'mmtemplates#core#EditTemplateFiles' is called
  for a file which is not yet available.

Awk:
- (DONE) 'code->comment' should not insert a space following the hash?

Bash:
- (DONE) 'code->comment' should not insert a space following the hash?
- (DONE) Template library, list 'IORedirection': check "duplicate STDIN from file descr n" and "duplicate STDOUT to file descr n"
- (DONE) Template library, list 'TestsFileTypes': "symbolic link -h".
- (DONE) Template library, list 'TestsFileCharacteristics': "file exists -a". Is apparently deprecated.
- Compl.-func. 'BASH_BuiltinComplete' missing.

C/C++:
- (FM, DONE) Documentation: Change documentation with regard to Make integration.
  * 'Run' menu entries removed.
  * Maps configured in ftplugin.
  * Reference documentation of toolbox.
  * Reference toolbox in 'c-hotkeys.tex'?
  * Document 'g:C_UseToolbox' and 'g:C_UseTool_*'.
  * Menu entry 'Run->executable to run' is not part of the Make integration
    anymore, since the Make integration moves to the toolbox. It is to be
    documented as configuration for 'Run->run', similar to 'Run->cmdline arg.'.
    Shortcut changes to '\re'.
- (DONE) Doxygen:
  * Templates for "overload".
  * Append "short, after member" to several lines.
  * Add escaped characters "\" and "|" once the template engine supports this.
- (DONE) Documentation: Change the description of the Doxygen setup.
- README: Change the description of the Doxygen setup.
- (DONE) Documentation: Adding additional template files.
- Configure the template which is inserted automatically when a new file is
  created.
- (DONE) Add a template to insert all section comments into a file at once.

Git:
- Add more suggestions for custom menu entries to 's:Git_CustomMenu'.
- Add current custom menu entries to documentation and/or "git-support/rc/",
  as a starting point for customization.
- Current method for jumping to Git buffers does not work for tabs.
  * (DONE) Open the buffer in a new window.
  * Optionally: Jump across tab pages.
- How about jumping to windows?
  * (DONE) Open the buffer in a new window.
  * Optionally: Jump across tab pages.
- (DONE) Problem with 's:OpenFile()':
  Since the name of the buffer has to match exactly, this does not always work
  with different working directories.
- (DONE) Maps for completing Git commands, branches, tags, remotes, ...
  similar to the cmd-line completion plug-in.
- (DONE) New status buffer output (version > 1.8.5):
  Update syntax highlighting, folding function, file actions
- (WM) Do not use "sync fromstart" in syntax highlighting,
  is extremely slow for diff and log.
- (WM) Document map "ow" in status buffer, mention in the README.
- (DONE) Document map "ac", "cc", and "rc" in diff buffer, mention in the README.
- (WM) Update buffer after executing a command: :GitBranch, :GitRemote, :GitStash, ...
- (WM) Buffer "git stash list", maps for: create
- (WM) Feed output of "git apply" into quickfix.
- (WM) Rename function 'GitS_FoldLog' into 'GitS_FoldLogTxt'.
- (WM) Set 'foldmethod' individually and not in 's:OpenGitBuffer'.
- Enable and document :GitAbove, :GitBelow, and :GitTab.
- Document 'g:Git_Editor', and the use of '$GIT_EDITOR', and add it to :GitSupportSettings.

LaTeX:
- (DONE) Reference Card: Menu 'Beamer' missing.
- (DONE) Documentation: Adding additional template files.
- Add 'luatex' as a type setter.

Lua:
- (DONE) Documentation: Add setup of C API templates.

Perl:
- (DONE?) 'perldoc' does not print the correct error message if it is not installed.
- Documentation: Maps Ctrl+j and Crtl+d.
- Documentation: Check that maps are introduced properly.
- (DONE) Documentation: Adding additional template files.
- (DONE) Remove old release script.

Vim:
- (WM, DONE) 'code->comment' should not insert a space following the quote.

Toolbox:
- (DONE) CMake: Does the help work at all under Windows? -> Yes.
- (DONE) CMake: Names of help buffers, can we use brackets, other characters (Windows)?
- (DONE) CMake: Run ccmake (in xterm), cmake-gui (UNIX and Windows)
- (DONE) Doxygen: Run doxywizard (UNIX)
- (DONE) Doxygen: Find doxywizard executable for Windows
- Make: Use option 'Make_Executable'.

Snippets:
- (FM, DONE?) Set first parameter ("save") in "browse()" to '1' for writing snippets

" vim: expandtab:tw=80
